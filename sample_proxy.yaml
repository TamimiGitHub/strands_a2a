#  A2A Proxy Configuration File
# This file demonstrates how to configure the A2A Proxy App, which makes
# standard A2A-over-HTTPS agents available on the Solace event mesh.

log:
  stdout_log_level: INFO
  log_file_level: DEBUG
  log_file: a2a_proxy.log

# Shared SAM config (includes broker connection details)
!include ../shared_config.yaml

apps:
  - name: a2a_proxy_app
    app_base_path: .
    app_module: solace_agent_mesh.agent.proxies.a2a.app # Points to the A2AProxyApp class
    broker:
      <<: *broker_connection

    # --- App Level Config for the Proxy ---
    app_config:
      namespace: ${NAMESPACE}

      # Configuration for the artifact service used by the proxy itself.
      # When the proxy receives an artifact from a downstream agent, it will
      # store it here before forwarding it on the Solace mesh.
      artifact_service:
        type: "filesystem"
        base_path: "/tmp/samv2"
        artifact_scope: namespace # Default scope, shares artifacts within the NAMESPACE

      # How the proxy should handle artifacts it sends over Solace.
      # 'reference': Sends an artifact:// URI.
      # 'embed': Sends the full content base64 encoded.
      artifact_handling_mode: "reference"

      # Interval in seconds for the proxy to re-fetch agent cards from
      # downstream agents. Set to 0 to disable periodic checks.
      discovery_interval_seconds: 5

      # --- List of Downstream Agents to Proxy ---
      proxied_agents:
        # Example 1: A simple agent without authentication
        - name: "StrandsCalculator" # The name this agent will have on the Solace mesh
          url: "http://0.0.0.0:9000" # The real HTTP endpoint of the agent
